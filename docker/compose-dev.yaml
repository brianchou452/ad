version: "3.9"
networks:
  app-tier:
    driver: bridge

services:
  api:
    image: dcard-ad-backend
    restart: always
    env_file:
      - ${PWD}/.env
    depends_on:
      - mongodb
    ports:
      - 80:80
    networks:
      - app-tier

  mongodb:
    image: mongodb/mongodb-community-server:7.0-ubi8
    volumes:
      - mongo-data:/data/db
    environment:
      - MONGODB_INITDB_ROOT_USERNAME=root
      - MONGODB_INITDB_ROOT_PASSWORD=example
    ports:
      - "27017:27017"
    networks:
      - app-tier
    restart: always

  # redis:
  #   image: redis:latest
  #   restart: always
  #   ports:
  #     - 6379:6379
  #   networks:
  #     - app-tier
  # redis1:
  #   image: redis:6.2.14
  #   command: redis-server --port 7006 --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly yes
  #   ports:
  #     - "7006:7006"
  #   healthcheck:
  #     test: ["CMD", "redis-cli", "-p", "7006", "cluster", "info"]
  #     interval: 1s
  #     timeout: 3s
  #     retries: 30
  #   networks:
  #     - app-tier

  redis-master:
    image: redis:6.2.14
    container_name: redis-master
    # volumes:
    #   - ./data/redis-master/data:/data
    ports:
      - 6379:6379
    networks:
      - app-tier

  redis-slave1:
    image: redis:6.2.14
    container_name: redis-slave1
    # volumes:
    #   - ./data/redis-slave1/data:/data
    ports:
      - 6380:6379
    command: redis-server --slaveof redis-master 6379
    depends_on:
      - redis-master
    networks:
      - app-tier

  # redis-slave2:
  #   image: redis:6.2.14
  #   container_name: redis-slave2
  #   # volumes:
  #   #   - ./data/redis-slave2/data:/data
  #   ports:
  #     - 6381:6379
  #   command: redis-server --slaveof redis-master 6379
  #   depends_on:
  #     - redis-master
  #     - redis-slave1
  #   networks:
  #     - app-tier

volumes:
  mongo-data:
